// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract StudentData {
    struct Student {
        string name;
        uint age;
        uint id;
    }

    Student[] public students;

    // Function to add a new student
    function addStudent(string memory _name, uint _age, uint _id) public {
        Student memory newStudent = Student(_name, _age, _id);
        students.push(newStudent);
    }

    // Function to get student details by index
    function getStudent(uint index) public view returns (string memory name, uint age, uint id) {
        require(index < students.length, "Student does not exist.");
        Student memory s = students[index];
        return (s.name, s.age, s.id);
    }

    // Payable fallback function
    fallback() external payable {}

    // Receive ether function
    receive() external payable {}
}
